# This file was *autogenerated* from the file dual.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)
from sage.geometry.polyhedron.base import Polyhedron

vertices1 = []
with open("sagein1", "r") as f:
    for line in f:
        a = line.strip().split()
        vertices1.append((float(a[_sage_const_0 ]), float(a[_sage_const_1 ]), float(a[_sage_const_2 ])))

p1 = Polyhedron(vertices=vertices1)
dual = p1.Hrepresentation()

with open("sageout", "w") as f:
    for ineq in dual:
        div = ineq[_sage_const_0 ]
        A = ineq[_sage_const_1 ] / float(div)
        B = ineq[_sage_const_2 ] / float(div)
        C = ineq[_sage_const_3 ] / float(div)
        f.write("%f %f %f\n" % (A, B, C))

